Web Framework Programming
WEEK 03Informatics Engineering
Universitas Surabaya
Topik 3: 
Database Connection, Migration & Seeding
Informatics Engineering | Universitas Surabaya
Cover Half

Gambar vector bisa didownload di: https://scale.flexiple.com/illustrations/
Jika ingin foto free royalty bisa download di: https://pixabay.com/photos/


OUTLINE
Connecting Laravel with MySQL
File .env
Migration Concept
Migration Syntax & Case study
Seeding Concept
Seeding Syntax & Case study


Native DB in Laravel
As Default, Laravel is able to connect several databases:

MariaDB
MySQL 
PostgreSQL
SQLite 
SQL Server



Default Configuration
Database access setting is located at config/database.php
Please look at this configuration in your new laravel project
env (param1, param2) is syntax for colleting value from variable base on .env (environment) file

For information, .env file should be place on root of your Laravel Project

param1 = KEY
param2 = default_value

File .env
This is the configuration to connect the database. If you use your local database server, it just need to set up line 12 to 14

Build Database Table using migration
Migration

Migrations
Laravel has a ‚Äúmagic‚Äù tool to build, modify, and delete database table structures. It is called Migrations. 

Migrations are like version control for your database, allowing your team to modify and share the application's database schema. Migrations are typically paired with Laravel's schema builder to build your application's database schema. 

from: https://laravel.com/docs/10.x/migrations#introduction

File Location
Migration files is placed on /database/migrations


By default, Laravel provides 4 file migrations that will create a User table, Password Reset, Failed Jobs table and Personal Access Token. The ‚Äúuser‚Äù table will be used to store the user of the application in the authentication process. Failed Jobs table will be used to store the failed activity. Personal access tokens is for APIs development in Laravel.



DDL

A migration file represent a DDL (Data Definition Language) statement to create or modify a database  schema/table.
A migration file is built with the Artisan command: php artisan make:migration namefile

All artisan file (which is not yet executed) are run with the Artisan command: php artisan migrate


Based on: https://laravel.com/docs/10.x/migrations 

Characteristics
Migrations file will run/execute only once after the programmer ‚Äúruns‚Äù migration.
If it need a modification to the existing schema, you should have to create a new migrations file and do a modifying syntax with ‚ÄúUpdate table‚Äù syntaxes in Migration files.
If you need to go back to the previous version of the database structure, use the rollback command Artisan: php artisan migrate:rollback
Here, the versioning feature is important
the migrations file name has a special format to represent the action in it. In the previous example: create_users_table, create => build new, _users =>table name, _table => the entity type table

Naming Conventions
The naming convention for table name use the plural noun.
for example: if you have a ‚Äúuser‚Äù data, then in the database the table will named: ‚Äòusers‚Äô
The background of this naming convention is came from the Eloquent Model, which will be explained later.


https://laravel.com/docs/10.x/eloquent#eloquent-model-conventions


Function in Migration Files
A migration file has two function : up() and down(). 

up() is using for executing the forward structure modification
down() is using for undoing the structure modification (backward)


UP Method
up() in the previous figure will create new table named ‚Äòusers‚Äô which have this attributes/column:
id (PK, Unsigned BIG INT)
Name (varchar/string)
Email (varchar/string, unique)
Email_verified_at (null, Timestamp)
Password (varchar/string)
Remember_token (varchar/string)
Created_at & updated_at (timestamp)

More about creating table: 
https://laravel.com/docs/10.x/migrations#creating-tables 
More about the columns data types
https://laravel.com/docs/10.x/migrations#columns 

Down Method
Down() always opposites with up() function. 
If the up() function creates a table, the down() function will delete the table structure.

More about dropping tables 
https://laravel.com/docs/10.x/migrations#renaming-and-dropping-tables
More about the columns data types
https://laravel.com/docs/10.x/migrations#columns 

There are 2 syntax for deleting table :


The second syntax will avoid error if there is no related table to be drop in the database.


Foreign Key
The syntax for foreign key: https://laravel.com/docs/10.x/migrations#foreign-key-constraints 






The explanation of the above syntax: Change the structure of table ‚Äòposts‚Äô by adding a new column user_id, with type Unsigned BigInteger, and make the ‚Äòuser_id‚Äô column a Foreign Key that relates to column ‚Äòid‚Äô in the ‚Äòusers‚Äô table

Case Study

Case
Self Ordering System has various foods and their categories
This system have 2 entities:
Foods ü°™ to store the name of foods, description, Nutrition Facts, Price
Categories ü°™ to store the general type of categories such as: Appetizer, Main Course, Snacks, Dessert, Coffee, Non-Coffee, Healthy Juice.
Exercise
Please construct this database

Example
Foods :
Name : Nasi Merah dengan Ayam Panggang Kecap & Tumis Kangkung
Description : Nikmati hidangan sehat dan lezat dengan Nasi Merah yang kaya serat, dipadukan dengan Ayam Panggang Kecap yang manis gurih dan Tumis Kangkung yang segar. Kombinasi sempurna untuk santapan yang mengenyangkan dan bergizi.
Price: Rp. 35.000,-
Nutrition facts : 
		Kalori: 400-550 kkal
		Protein: 30-40 gram
		Lemak: 15-25 gram
		Karbohidrat: 50-70 gram
		Serat: 5-8 gram
2. Categories : Appetizer, Main Course, Snacks, Dessert, Coffee, Non-Coffee, Healthy Juice

Practice #1 

Migration for types
Result


Create_categories_table.php
Laravel will automatically add  up() and down() function and fill with some code. We just need to add (or remove) another fields which not already there.


Create_foods_table.php
Result

Make sure your Connection database before Run Migration
Before running it, make sure that your setting in .env already refer correct database

Migration Result
Run php artisan migrate and see result


How can we improve with specific coloumn?
Practice #2

New Migration for update attributes
We will try to update our two tables with a new attributes

[REMEMBER]
One migration file is only one time execution. If you want to update something after execution, you can make a new file with update statement
Untuk mengupdate kolom secara langsung terhadap tabel tertentu, anda bisa menggunkan syntax php artisan make:migration <namaPerubahan>_<namaTable>_table ‚Äìtable=<NamaTable>

New Migration for update attributes
Two new files are still empty.
We need to fulfill the correct syntax with ‚ÄúCreating Column‚Äù , ‚ÄúAvailable Column Types‚Äù, ‚ÄúDropping Column‚Äù
https://laravel.com/docs/10.x/migrations#modifying-columns 
https://laravel.com/docs/10.x/migrations#available-column-types 

Update your attributes (Files)
Foods :
id
name
nutrition_fact
description
price
category_id (FK)
Created_at
	   kapan data dibuat
Updated_at
	    kapan data diupdate terakhir
Categories :
id
name

Update for Relationship
In many cases, we need to add foreign key in the table. In our system, we need to add   ‚Äòcategory_id‚Äô into ‚Äòfood‚Äô table. This represents that one place has only one category, and one category has many foods.







Exercise: ‚ÄúHow to modify table, add new column, and create relation with a column from another table‚Äù


Foods
id (PK)
category_id (FK)
name
..‚Ä¶‚Ä¶‚Ä¶
Categories
id (PK)
Name
‚Ä¶.

Foods Migration Update
Please write and check with Laravel Documentation & Your Case Study

Category Migration Update
Please write and check with Laravel Documentation & Your Case Study

Run migration after completed

Seeding

Seeding
Seeding in Laravel means to fill in and modify data in the table
File Seeding use for initial data of an application. It is often used as dummy data to demonstrate the application features. Seeding files are located at ‚Äòdatabase/seeders‚Äô
Seeding is not have a versioning mechanism like in the migration
Seeding file listed in DatabaseSeeder.php




https://laravel.com/docs/10.x/seeding 
 



DatabaseSeeder.php
DatabaseSeeder.php is the mainClass of Seeding implementation. 

Laravel will read the content of statemen run() and run it sequentially. Seeder file can be executed over and over.

Fill table with seeder
There are 2 ways to fill table with data. (1) Query Builder; (2) Eloquent Model Factory.

In this section we use Query Builder with insert() method and Faker (https://fakerphp.org/) 

The steps are

1. Create Seeder File
A seeder file represent a table. If you have 4 tables than you will have maximum 4 seeder file 
Syntax in command Artisan to create seeder: php artisan make:seeder UserSeeder
UserSeeder represent a filling for table User.



1. Create Seeder File (2)
Create seeder for foods and categories

2. Using Query Builder
Based on https://laravel.com/docs/10.x/seeding#writing-seeders 
Query Builder documentation can be found at https://laravel.com/docs/10.x/queries#insert-statements 
Each seeder can be written with this query builder syntax.


15 minutes
Practice #4

Fill CategorySeeder

Fill Food
Add 3 items in food
Do not forget to add library DB & str for random on the top of class seeding

Check your UserFactory (use Faker)

Modify DatabaseSeeder

Run seeder

Result User

Result Foods and Categories

Another Issues
Apabila bertemu error dengan tulisan ‚Äú‚Ä¶‚Ä¶ doesn‚Äôt have a default value‚Äù, maka anda perlu cek database. Silakan cek struktur database dan kaitkan dengan keilmuan database anda.

Faker
https://fakerphp.org/formatters/ 

Exercise

Exercise for Project Milestones

Please make 3 tables: (a) Customers, (b) Transactions, (c) Payment
Make: (a) Customer migration, seeder, (b) Transaction migration seeder, (C) Payment migration seeder
Two entities will support: 
Ordering Systems
Show Catalogs
Payment Mechanism

Thank You
